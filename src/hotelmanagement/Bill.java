/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelmanagement;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Sony
 */
public class Bill extends javax.swing.JFrame {
Connection con;
PreparedStatement ps;
Statement st;
ResultSet rs;

    /**
     * Creates new form Bill
     */
    public Bill() {
        try
        {
            Class.forName("oracle.jdbc.OracleDriver");
            JOptionPane.showMessageDialog(this,"Driver Loaded Successfully");
        try
        {
            con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","SYSTEM","msk11");
            JOptionPane.showMessageDialog(this, "Welcome! You are Connected to ORACLE DB Server");
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this,"Server Not Loaded");
                }
}
        catch(Exception e1)
        {
            JOptionPane.showMessageDialog(this,"Drivers Not Loaded");
        }
        
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tbno = new javax.swing.JTextField();
        tcid = new javax.swing.JTextField();
        tamt = new javax.swing.JTextField();
        insert = new javax.swing.JButton();
        search = new javax.swing.JButton();
        totcc = new javax.swing.JButton();
        bmenu = new javax.swing.JButton();
        sk = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("BILLNO");

        jLabel2.setText("CUSTOMERID");

        jLabel3.setText("TOTAL AMT");

        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        search.setText("SHOW BILL FOR CUSTOMER ID");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        totcc.setText("TOTAL CALCULATE");
        totcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totccActionPerformed(evt);
            }
        });

        bmenu.setText("BACK TO MENU");
        bmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmenuActionPerformed(evt);
            }
        });

        sk.setText("jTextField1");
        sk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(insert))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(search)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tbno)
                                .addComponent(tcid)
                                .addComponent(tamt, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                            .addComponent(sk, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(totcc))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(bmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tbno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tcid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tamt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(sk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert)
                    .addComponent(search))
                .addGap(18, 18, 18)
                .addComponent(totcc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(bmenu)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
       
        //String t="Call amt(?)";
       //try{
             
        //ps=con.prepareStatement(t);
          //ps.setString(1,tcid.getText());
            //ps.execute();
        
         String s="insert into bill(bno,cid,total)values(Billgen.nextval,?,?)";
        try
        {
            
        ps=con.prepareStatement(s);
          
            ps.setString(1,tcid.getText());
            ps.setString(2,tamt.getText());
            ps.execute();
            
            JOptionPane.showMessageDialog(this, "Record Inserted Sucessfully!");
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        clearData();
    }//GEN-LAST:event_insertActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
        String s="select bno,cid,total from bill where cid= '"+tcid.getText()+"'";
        try
        {
           
            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
         rs=st.executeQuery(s);
         rs.first();
         tbno.setText(rs.getString(1));
         tcid.setText(rs.getString(2));
         tamt.setText(rs.getString(3));
            
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(this,"Record not found");
            
        }
    }//GEN-LAST:event_searchActionPerformed

    private void totccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totccActionPerformed
        // TODO add your handling code here:
         String t="Call amt(?)";
          
         try
         {
            
             ps=con.prepareStatement(t);
             ps.setString(1,tcid.getText());
             ps.execute();
             
             
             
             
             
                      JOptionPane.showMessageDialog(this,"Total calculated");
             
         }
         catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        
          /*  String n=" insert into bill values(Billgen.nextval,?,)";
            try{
                ps=con.prepareStatement(n);
             ps.setString(1,tcid.getText());
             ps.execute();
             
             JOptionPane.showMessageDialog(this,"Record inserted");
             
         }
         catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(this,"Couldnt insert");
            }*/
         /*String t="{?=call totc(?)}";
         try
         {
             CallableStatement statement = con.prepareCall(t);
                 statement.setString(1,tcid.getText());
                 statement.registerOutParameter(2,Types.INTEGER);
                 statement.execute();
                 String result = statement.getString(2);
                 statement.close();
                 System.out.println("result:" +result);
                // String n="update bill set total=result";
             /*st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs=st.executeQuery(n);
            rs.first();*/
             //ps=con.prepareStatement(n);
             //ps.execute();
            //tamt.setText(rs.getString(1));
          //  JOptionPane.showMessageDialog(this,"SUCCESS");
            
         //
            /*CallableStatement statement = con.prepareCall(t);
                 statement.setString(1,tcid.getText());
                 statement.registerOutParameter(2,Types.INTEGER);
                 statement.execute();
                 String result = statement.getString(2);
                 tamt.setText(result);
             }*/
            
            
                     /*ps=con.prepareStatement(t);
             ps.setString(1,tcid.getText());
             ps.execute();
          tamt.setText(t);
             JOptionPane.showMessageDialog(this,"Total calculated");
                         /*ps=con.prepareStatement(t);
             ps.setString(1,tcid.getText());
             ps.execute();
          tamt.setText(t);
             JOptionPane.showMessageDialog(this,"Total calculated");
             
         }*/
         /*catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(this,"Couldnt calculate");
            }*/   
             
             
            
             
         
         /*catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }*/
         
         
      
            
            
            
         
         
         
           
           
           
        //}
         
    }//GEN-LAST:event_totccActionPerformed

    private void bmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmenuActionPerformed
        // TODO add your handling code here:
        MENU obt=new MENU();
        obt.setVisible(true);
    }//GEN-LAST:event_bmenuActionPerformed

    private void skActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skActionPerformed
private void clearData()
{
    tbno.setText("");
    tcid.setText("");
    tamt.setText("");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bmenu;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton search;
    private javax.swing.JTextField sk;
    private javax.swing.JTextField tamt;
    private javax.swing.JTextField tbno;
    private javax.swing.JTextField tcid;
    private javax.swing.JButton totcc;
    // End of variables declaration//GEN-END:variables
}
